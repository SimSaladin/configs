# ~/.rtorrent.rc
#
# <url:https://github.com/rakshasa/rtorrent/wiki/CONFIG-Template>

## Instance layout (base paths)
method.insert = cfg.basedir,  private|const|string, (cat,(system.env,HOME), "/.local/share/rtorrent/")
method.insert = cfg.download, private|const|string, (cat,(system.env,HOME),"/Downloads/")
method.insert = cfg.logs,     private|const|string, (cat,(cfg.basedir),"log/")
method.insert = cfg.logfile,  private|const|string, (cat,(cfg.logs),"rtorrent-",(system.time),".log")
method.insert = cfg.session,  private|const|string, (cat,(cfg.basedir),"session/")
method.insert = cfg.watch,    private|const|string, (cat,(cfg.basedir),"watch/")

## Create instance directories
execute.throw = sh, -c, (cat,\
    "mkdir -p \"",(cfg.download),"\" ",\
    "\"",(cfg.logs),"\" ",\
    "\"",(cfg.session),"\" ",\
    "\"",(cfg.watch),"/load\" ",\
    "\"",(cfg.watch),"/start\" ")

## Operational settings
session.path.set      = (cat, (cfg.session))
directory.default.set = (cat, (cfg.download))
log.execute           = (cat, (cfg.logs), "execute.log")
log.xmlrpc            = (cat, (cfg.logs), "xmlrpc.log")
execute.nothrow       = sh, -c, (cat, "echo >", (session.path), "rtorrent.pid", " ",(system.pid))
system.cwd.set        = (directory.default)

network.http.dns_cache_timeout.set = 25

## Listening port for incoming peer traffic (fixed; you can also randomize it)
network.port_range.set = 50000-50000
network.port_random.set = no

## Peer settings
throttle.max_uploads.set = 5
throttle.global_down.max_rate.set_kb = 4098
throttle.global_up.max_rate.set_kb = 512
protocol.encryption.set = allow_incoming,try_outgoing,enable_retry

## Configure DHT
dht.mode.set = auto
dht.port.set = 6881
protocol.pex.set = yes

trackers.use_udp.set = yes

## Watch directories (add more as you like, but use unique schedule names)
## Add torrent
schedule = watch_load, 10, 15, ((load.verbose, (cat, (cfg.watch), "load/*.torrent")))
## Add & download straight away
schedule = watch_start, 11, 15, ((load.start_verbose, (cat, (cfg.watch), "start/*.torrent")))
schedule = watch_Downloads, 12, 15, ((load.start_verbose, "~/Downloads/*.torrent"))

## Monitor diskspace
schedule = monitor_diskspace, 20, 120, ((close_low_diskspace, 4000M))

## Logging:
##   Levels = critical error warn notice info debug
##   Groups = connection_* dht_* peer_* rpc_* storage_* thread_* tracker_* torrent_*
print = (cat, "Logging to ", (cfg.logfile))
log.open_file = "log", (cfg.logfile)
log.add_output = "info", "log"
#log.add_output = "tracker_debug", "log"

## SCGI Connectivity (for alternative rtorrent interfaces, XMLRPC)
#scgi_port = 127.0.0.1:5005

# vim:ft=conf:
