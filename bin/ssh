#!/bin/bash
#-----------------------------------------------------------------------------
# File:          ssh
# Author:        Samuli Thomasson <samuli.thomasson@relexsolutions.com>
#-----------------------------------------------------------------------------
# Description:   Wrapper for ssh command. Mirrors local terminal's terminfo
#                description at remote when no explicit remote command is
#                specified.
# Usage:         ssh [-Z] [sshopts] [commands]
#                -Z: don't overwrite terminfo
#-----------------------------------------------------------------------------

# Say SSH_SETUP_TERMINFO=no to disable this workaround
setup_terminfo=${SSH_SETUP_TERMINFO:-y}

term=$TERM

case $TERM in
  tmux-256color ) term=screen-256color ;;
  * ) term=$TERM ;;
esac

the_ssh=/usr/bin/ssh
ssh=()
host=
did_t=

parseargs(){
  if [[ -z $term ]]; then
    return 1
  fi

  while [[ $1 && ! $host ]]; do
    if [[ $1 == -Z || $1 == -*([46AaCfgKkMnqsTtVvXxYy])[GN]* ]]; then
      setup_terminfo=no
      return
    fi
    if [[ $1 == -*([46AaCfGgKkMNnqsTVvXxYy])[t]* ]]; then
      did_t=y
    fi

    if [[ $1 == -+([46AaCfGgKkMNnqsTtVvXxYy])* ]]; then # option
      ssh+=("$1")

    elif [[ $1 == -* ]]; then # option with param
      ssh+=("$1" "$2")
      shift

    else # the host param
      host=$1
    fi
    shift
  done

  cmd=( "$@" )

  if [[ ! $did_t ]]; then
    ssh+=( -t )
  fi

  [[ $setup_terminfo == y* && ${cmd[0]} != *git* ]]
}

mkterminfocmd(){
  t=${term:0:1}
  terminfo=$(infocmp -0qQ2 "$term"|tr '_-' '/+')
  setcmd="if mkdir -p ~/.terminfo/$t;then base64 -d<<<${terminfo#b64:}>~/.terminfo/$t/$term;fi;"
  if [[ -z ${cmd[*]} ]]; then
    cmd=("exec \$SHELL -i")
  fi
  cmd=("$setcmd" "${cmd[@]}")
}

if ! parseargs "$@"; then
  exec "$the_ssh" "$@"
fi
mkterminfocmd
echo "term: ${term} (${TERM}) ${cmd[*]@Q}" >&2
TERM=$term exec "$the_ssh" "${ssh[@]}" "$host" "${cmd[@]}"
