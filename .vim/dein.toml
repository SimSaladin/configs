# File: ~/.vim/dein.toml              vim:set vsts=2,12:
# Author: Samuli Thomasson
# Description: dein plugins configuration

# TODO if you use vim-textobj-multiblock
# TODO if you use vim-textobj-anyblock
# TODO if you use vim-textobj-between

# Plugins plugins                                                        {{{1
[[plugins]] # dein - Plugin Manager                                        {{{2
repo = 'Shougo/dein.vim'
[[plugins]] # yarp - Remote plugins (lazy)                                 {{{2
repo = 'roxma/nvim-yarp'
name = 'yarp'
[[plugins]] # hug-neovim-rpc - VIM8-Nvim compatibility                     {{{2
repo = 'roxma/vim-hug-neovim-rpc'
on_if = '!has("nvim")'
[[plugins]] # ingo - library (needed by SyntaxRange)                       {{{2
repo = 'inkarkat/vim-ingo-library'
name = 'ingo'

# Motions, operators, text objects                                       {{{1
# Align, AutoAlign, tabular                                                {{{2
[[plugins]] # cecutil v18h. AlignCtrl, Align, AlignPush, AlignPop <url:vimhelp:align.txt>
repo = 'vim-scripts/Align'
[[plugins]] # aligns bib, c/pp, tex, vim content <url:vimhelp:autoalign-AA>
repo = 'vim-scripts/AutoAlign'
depends = 'Align'
[[plugins]] # :Tabularize /pat/flags  <url:vimhelp:tabular>
repo = 'godlygeek/tabular'
# repeat                                                                   {{{2
[[plugins]] # (lazy) <url:vimhelp:repeat.txt>
repo = 'vim-scripts/repeat.vim'
name = 'repeat'
# camelcasemotion     CamelCase i?[wbe]       <url:vimhelp:camelcasemotion>{{{2
[[plugins]]
repo = 'vim-scripts/camelcasemotion'
# caw                 Comments                <url:vimhelp:caw.txt>        {{{2
[[plugins]] # Alternative: tomtom/tcomment_vim, nerdcomment
repo = 'tyru/caw.vim'
name = 'caw'
depends = 'operator-user'
# dentures            Indent-blocks           <url:vimhelp:dentures>       {{{2
[[plugins]]
repo = 'qstrahl/vim-dentures'
name = 'dentures'
# niceblock                                                                {{{2
[[plugins]] # v_b_[IA] wherever       <url:vimhelp:niceblock.txt>
repo = 'kana/vim-niceblock'
name = 'niceblock'
# smartchr                                                                 {{{2
[[plugins]]    # New multi-mappings (lazy)<url:vimhelp:smartchr.txt>
repo = 'kana/vim-smartchr'
name = 'smartchr'
# operator-.*                                                              {{{2
[[plugins]]
repo = 'kana/vim-operator-user'
name = 'operator-user'
[[plugins]]
repo = 'kana/vim-operator-replace'
name = 'operator-replace'
depends = 'operator-user'
[[plugins]] # See help for config variables, e.g. <url:vimhelp:g:operator#surround#blocks>
repo = 'rhysd/vim-operator-surround'
name = 'operator-surround'
depends = 'operator-user'
# textobj-.*                                                               {{{2
[[plugins]] # (lazy) New textobjects <url:vimhelp:textobj-user.txt>
repo = 'kana/vim-textobj-user'
[[plugins]]
repo = 'kana/vim-textobj-entire'
[[plugins]]
repo = 'kana/vim-textobj-fold'
[[plugins]]
repo = 'kana/vim-textobj-line'
[[plugins]]
repo = 'kana/vim-textobj-syntax'

# Fold                                                                   {{{1
[[plugins]] # FastFold <url:vimhelp:fastfold>                              {{{2
repo = 'Konfekt/FastFold'
name = 'fastfold'
[[plugins]] # foldcycle - Intuitive (un)folding <url:vimhelp:fold-cycle>   {{{2
repo = 'arecarn/vim-fold-cycle'
name = 'foldcycle'
[[plugins]] # anyfold <url:vimhelp:anyfold>                                {{{2
repo = 'pseewald/vim-anyfold'
name = 'anyfold'
# Syntax                                                                 {{{1
# AnsiEsc             ANSI escape sequences                                {{{2
[[plugins]]
repo = 'powerman/vim-plugin-AnsiEsc'
name = 'AnsiEsc'
# findent             Deduce indent settings                               {{{2
[[plugins]]
repo = 'lambdalisue/vim-findent'
name = 'findent'
# context_filetype    Nested ftplugins                                     {{{2
[[plugins]] # (lazy) <url:vimhelp:context_filetype.txt>
repo = 'Shougo/context_filetype.vim'
name = 'context_filetype'
# SyntaxRange         Nested syntax                                        {{{2
[[plugins]] # The global plugin just defines one command <url:vimhelp:SyntaxRange>
repo = 'vim-scripts/SyntaxRange'
depends = 'ingo'
# Solarized           Solarized colors                                     {{{2
[[plugins]]
repo = 'altercation/vim-colors-solarized'
name = 'solarized'
# polyglot            Filetype plugins                                     {{{2
[[plugins]] # (lazy) <url:~/.cache/vim/dein/repos/github.com/sheerun/vim-polyglot/README.md>
repo = 'sheerun/vim-polyglot'
name = 'polyglot'
# colorizer           Hilight color codes                                  {{{2
[[plugins]] # <url:https://github.com/lilydjwg/colorizer/blob/master/plugin/colorizer.vim>
repo = 'lilydjwg/colorizer'

# quickfixsigns       qf/ll in signcolumn                                  {{{2
[[plugins]] # <url:vimhelp:quickfixsigns.txt>
repo = 'tomtom/quickfixsigns_vim'
name = 'quickfixsigns'

# Sessions                                                               {{{1
[[plugins]] # Obsession - session management                               {{{2
repo = 'tpope/vim-obsession'
name = 'obsession'
# Integrations                                                           {{{1
# Fugitive            Git mappings            <url:vimhelp:fugitive>       {{{2
[[plugins]]
repo = 'tpope/vim-fugitive'
name = 'fugitive'
# nerdtree            nerdtree                <url:vimhelp:NERDTRee>       {{{2
[[plugins]]
repo = 'scrooloose/nerdtree'
[[plugins]]
repo = 'Xuyuanp/nerdtree-git-plugin'
# utl                 hyperlink anything      <url:vimhelp:utl>            {{{2
[[plugins]]
repo = 'vim-scripts/utl.vim'
name = 'utl'
# Filetype                                                               {{{1
# css-syntax                                                               {{{2
[[plugins]] # (lazy)
repo = 'hail2u/vim-css3-syntax'
name = 'css-syntax'
# dhall                                                                    {{{2
[[plugins]] # (lazy) <url:~/.cache/vim/dein/repos/vmchale/dhall-vim/README.md>
repo = 'vmchale/dhall-vim'
name = 'dhall'
# diff-fold                                                                {{{2
[[plugins]] # (lazy)
repo = 'thinca/vim-ft-diff_fold'
name = 'diff-fold'
# gnupg                                                                    {{{2
[[plugins]] # XXX: plugin
repo = 'jamessan/vim-gnupg'
name = 'gnupg'
# vint (Vim lint)                                                          {{{2
[[plugins]] # (needs vlint executable)
repo = 'Kuniwak/vint'
on_if = 'executable("vint")'
# help-fold, -lint                                                         {{{2
[[plugins]]    # (lazy)
repo = 'thinca/vim-ft-help_fold'
name = 'help-fold'
[[plugins]]
repo = 'machakann/vim-vimhelplint'
name = 'help-lint'
# yaml-fold (e?yaml|raml|sls)                                              {{{2
[[plugins]]    # (lazy)
repo = 'pedrohdz/vim-yaml-folds'
name = 'yaml-fold'
# nftables                                                                 {{{2
[[plugins]] # (lazy)
repo = 'nfnty/vim-nftables'
name = 'nftables'
# vimwiki                                                                  {{{2
[[plugins]] # <url:vimhelp:vimwiki>
repo = 'vimwiki/vimwiki'
# csv                                                                      {{{2
[[plugins]] # <url:vimhelp:ft-csv.txt>
repo = 'chrisbra/csv.vim'
name = 'csv'
# elm                                                                      {{{2
[[plugins]] # <url:vimhelp:elm-vim> (syntax, indent, ide integ, compl)
repo = 'ElmCast/elm-vim'
name = 'elm'
# uml (slumlord, plantuml)                                                 {{{2
[[plugins]]
repo = 'scrooloose/vim-slumlord'
merged = 0
[[plugins]]
repo = 'aklt/plantuml-syntax'
# info (:Info)           {{{2                                              {{{2
[[plugins]] # <url:vimhelp:info.txt>
repo = 'https://gitlab.com/HiPhish/info.vim'
name = 'info'
# taskwiki (vimwiki)                                                       {{{2
[[plugins]] # <url:vimhelp:taskwiki>
repo = 'tbabej/taskwiki'
build = 'pip install --user --upgrade tasklib'
on_if = 'execute("python3 import tasklib; print(1)","silent!")'  # yes really need it
# taskwarrior (tasksreport)                                                {{{2
[[plugins]]
repo = 'xarthurx/taskwarrior.vim'
name = 'taskwarrior'
