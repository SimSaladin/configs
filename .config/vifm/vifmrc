" File: ~/.config/vifm/vifmrc                   vim:ft=vifm:ts=8:sw=4:et:
"
" Configuration file of vifm.
" Based sample config of 20 July, 2018.

" Options                                                                 {{{1

" This is the actual command used to start vi(m).
set vicmd=vim

" This defaults to vicmd but if different takes precedence in X.
"set vixcmd=

" This makes vifm perform file operations on its own instead of relying on
" standard utilities like `cp`.
set syscalls

" Trash Directory
" The default is to move files that are deleted with dd or :d to the trash
" directory.
set trash
"set trashdir=path/to/trash

" This is how many directories to store in the directory history.
set history=100

" Automatically resolve symbolic links on l or Enter.
set nofollowlinks

" With this option turned on you can run partially entered commands with
" unambiguous beginning using :! (e.g. :!Te instead of :!Terminal or :!Te<tab>).
"set fastrun

" Natural sort of (version) numbers within text.
set sortnumbers

" Maximum number of changes that can be undone.
set undolevels=100

" If you installed the vim.txt help file set vimhelp.
set vimhelp

" If you would like to run an executable file when you press return on the file
" name set this.
set runexec

" Selected color scheme
colorscheme solarized-16color

" Format for displaying time in file list.
" For example: %m/%d-%H:%M See man date or man strftime for details.
set timefmt=%m/%d\ %H:%M

" Show list of matches on tab completion in command-line mode
set wildmenu
" Display completions in a form of popup with descriptions of the matches
set wildstyle=popup

" Display suggestions in normal, visual and view modes for keys, marks and
" registers (at most 5 files). In other view, when available.
set suggestoptions=normal,visual,view,otherpane,keys,marks,registers

" Ignore case in search patterns unless it contains at least one uppercase
" letter
set ignorecase
set smartcase

" Highlight search results automatically
set hlsearch

" Use increment searching (search while typing)
set incsearch

" Try to leave some space from cursor to upper/lower border in lists
set scrolloff=4

" Don't do too many requests to slow file systems
if !has('win')
    set slowfs=curlftpfs
endif

" Set custom status line look <url:man:vifm#'stl'>
set statusline="  [free: %a] [sel: %E] [sort: %{&sort}] %= %T %15s %20d %10u:%-7g %10A  "

" What should be saved automatically between vifm runs
set vifminfo=bmarks,bookmarks,chistory,shistory,phistory,registers

" Use ag (the silver searcher) instead of grep
"   set grepprg='ag --line-numbers %i %a %s'

" Marks                                                                   {{{1
"
" :mark mark /directory/path [filename]

mark b ~/bin/
mark h ~/

" Commands                                                                {{{1
"
" :com[mand][!] command_name action

command! df df -h %m 2> /dev/null
command! diff vim -d %f %F
command! zip zip -r %f.zip %f
command! run !! ./%f
command! make !!make %a
command! mkcd :mkdir %a | cd %a
command! vgrep vim "+grep %a"
command! reload :write | restart


" How to: command macros                                                  {{{1
"
" %a is replaced with the user arguments. May contain other macros.
" %c (%C) the current (other window) file under the cursor.
" %f (%F) the current (other window) selected file, or files.
" %d (%D) the current (other window) directory name.
" %m show command output in a menu.
" See <url:man:vifm#Command macros> for all macros.
" How to: commands :file, :file[x]type, :file[x]viewer                    {{{1
"
" The filetype is for the default programs to be used with a file extension.
" The other programs for the file type can be accessed with the :file command.
"
" The command macros %f, %F, %d, %F may be used in the commands.
" The %a macro is ignored.  To use a % you must put %%.
"
" :f[ile][ arg][ &]     Open program menu for current file
"                       With & forces opening in the background
"                       With [arg], skip menu and runs command beginning [arg]
" :filev[iewer] fname   Lists current viewers for filename
" :file[x]t[ype] fname  Lists in menu patterns for such filename
"
"
" :file[x]type pattern-list [{descr}]def_prog[ &],[{descr}]prog2[ &],...
"
"     associate program (command) list to pattern list
"
" :fileviewer pattern-list command1,command2,...
"
"     associate viewers (command whose output is captured for :view)
"
" How to: FUSE_MOUNT[2]                                                   {{{1
"
" :filetype extensions FUSE_MOUNT|{some_mount_command using %SOURCE_FILE and %DESTINATION_DIR variables}
" :filetype extensions FUSE_MOUNT2|some_mount_command using %PARAM and %DESTINATION_DIR variables
"
" %PARAM value is filled from the first line of file (whole line). Example first
" line for SshMount filetype: root@127.0.0.1:/
" You can also add %CLEAR if you want to clear screen before running FUSE
" program.
"
" Examples:
"   :filetype *.zip,*.jar,*.war,*.ear FUSE_MOUNT|fuse-zip %SOURCE_FILE %DESTINATION_DIR
"   :filetype *.ssh FUSE_MOUNT2|sshfs %PARAM %DESTINATION_DIR
"
" Filetypes                                                               {{{1
" Pdf/PostScript/Djvu                                                     {{{2
filextype *.pdf,*.ps,*.eps,*.ps.gz
    \ {View in llpp} llpp %c %i &,
    \ {View in zathura} zathura %c %i &,
    \ {View in evince} evince %c %i &,
fileviewer *.pdf
    \ pdftotext -nopgbrk %c -
fileviewer *.ps,*.eps,*.ps.gz
    \ ps2ascii %c

" Audio/Video                                                             {{{2
filetype *.wav,*.mp3,*.flac,*.m4a,*.wma,*.ape,*.ac3,*.og[agx],*.spx,*.opus
    \ {Play using mpv} mpv %f,
    \ {Play using ffplay} ffplay -nodisp -autoexit %c,
filextype *.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.mpeg,*.vob,
         \*.fl[icv],*.m2v,*.mov,*.webm,*.ts,*.mts,*.m4v,*.r[am],*.qt,*.divx,
         \*.as[fx]
    \ {Play using mpv (movie)} mpv --profile=movie %f,
    \ {Play using mpv (preview)} mpv --profile=preview %f,

fileviewer *.wav,*.mp3,*.flac,*.m4a,*.wma,*.ape,*.ac3,*.og[agx],*.spx,*.opus,
          \*.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.mpeg,*.vob,
          \*.fl[icv],*.m2v,*.mov,*.webm,*.ts,*.mts,*.m4v,*.r[am],*.qt,*.divx,
          \*.as[fx]
    \ mediainfo %c


" Images                                                                  {{{2
filextype *.bmp,*.jpg,*.jpeg,*.png,*.gif,*.xpm
    \ {View in feh} feh %f,
fileviewer *.bmp,*.jpg,*.jpeg,*.png,*.gif,*.xpm
    \ convert -identify %f -verbose /dev/null

" Markup                                                                  {{{2
filextype *.html,*.htm
    \ {Open with w3m} w3m %c,
    \ {Open with qutebrowser} qutebrowser %f %i &,
    \ {Open with firefox} firefox %f &,
filetype *.html,*.htm
    \ w3m, links, lynx

" Markdown                                                                {{{2
fileviewer *.md,*.mkd,README,*.wmd mdcat

" CSV
fileviewer *.csv vimpager

" Object                                                                  {{{2
filetype *.o nm %f | less

" Man page                                                                {{{2
filetype *.[1-8] man ./%c

fileviewer *.[1-8] man ./%c | col -b

" MD5/SHA*/GPG                                                            {{{2
filetype *.md5      {Check MD5 hash sum} md5sum -c %f %S,
filetype *.sha1     {Check SHA1 hash sum} sha1sum -c %f %S,
filetype *.sha256   {Check SHA256 hash sum} sha256sum -c %f %S,
filetype *.sha512   {Check SHA512 hash sum} sha512sum -c %f %S,
filetype *.asc      {Check GPG signature} !!gpg --verify %c,

" Torrent                                                                 {{{2
filetype   *.torrent mv %f ~/Downloads &
fileviewer *.torrent dumptorrent -v %c

" Archives                                                                {{{2

filetype *.zip,*.jar,*.war,*.ear,*.oxt,*.apkg
    \ {Mount fuse-zip} FUSE_MOUNT|fuse-zip %SOURCE_FILE %DESTINATION_DIR,
    \ {Extract here} unzip %c,
fileviewer *.zip,*.jar,*.war,*.ear,*.oxt
    \ zip -sf %c

filetype *.rar
    \ {Mount rar2fs} FUSE_MOUNT|rar2fs %SOURCE_FILE %DESTINATION_DIR,
fileviewer *.rar unrar v %c

filetype *.iso
    \ {Mount fuseiso} FUSE_MOUNT|fuseiso %SOURCE_FILE %DESTINATION_DIR,
fileviewer *.iso mediainfo %c

filetype *.tar,*.tar.bz2,*.tar.gz,*.tar.xz,*.tbz2,*.tgz,*.txz
    \ {Mount archivemount} FUSE_MOUNT|archivemount %SOURCE_FILE %DESTINATION_DIR,
    \ {Extract here} tar -xf %c,
fileviewer *.tar,*.tar.bz2,*.tar.gz,*.tar.xz,*.tbz2,*.tgz,*.txz
    \ tar -tf %c

filetype *.7z
    \ {Mount fuse-7z} FUSE_MOUNT|fuse-7z %SOURCE_FILE %DESTINATION_DIR,
fileviewer *.7z 7z l %c

" ssh/ftp mount                                                           {{{2
filetype *.ssh
    \ {Mount with sshfs} FUSE_MOUNT2|sshfs %PARAM %DESTINATION_DIR %FOREGROUND,
filetype *.ftp
    \ {Mount with curlftpfs} FUSE_MOUNT2|curlftpfs -o ftp_port=-,,disable_eprt %PARAM %DESTINATION_DIR %FOREGROUND,

" Office files                                                            {{{2
filextype *.odt,*.doc,*.docx,*.xls,*.xlsx,*.odp,*.pptx
    \ libreoffice %f &
fileviewer *.doc catdoc %c
fileviewer *.docx docx2txt.pl %f -

" Qt projects                                                             {{{2
filextype *.pro qtcreator %f &

" All other files                                                         {{{2
"
" By default all unknown files are opened with 'vi[x]cmd'
" This line will result in ignoring 'vi[x]cmd' option for unknown file types.
"
"filetype * xdg-open

" Mappings                                                                {{{1

nnoremap ~ :cd ~<cr>

" Display sorting dialog
nnoremap s :sort<cr>

" Start shell in current directory
nnoremap S :shell<cr>

" Toggle visibility of preview window
nnoremap w :view<cr>
vnoremap w :view<cr>gv

" Open file for editing
nnoremap oe :edit %f<cr>
" Open file using its default program
nnoremap of :file<cr>l
" Open file selecting program
nnoremap oF :file<cr>
" Open file in the background using its default program
nnoremap ob :file &<cr>l
" Open file using !less
nnoremap ol :!less %f<cr>

" Yank current directory path into the clipboard
nnoremap yd :!echo %d | xclip %i<cr>
" Yank current file path into the clipboard
nnoremap yf :!echo %c:p | xclip %i<cr>

" Mappings for faster renaming
nnoremap I cw<c-a>
nnoremap cc cw<c-u>
nnoremap A cw

" Open console in current directory
nnoremap ,t :!urxvtc &<cr>

" Open editor to edit vifmrc and apply settings after returning to vifm
nnoremap ,c :write | edit $MYVIFMRC | restart<cr>

" Toggle wrap setting on ,w key
nnoremap ,w :set wrap!<cr>

" Other settings                                                          {{{1
"
" Add additional place to look for executables
"   let $PATH = $HOME.'/bin/fuse:'.$PATH

" How to: IPC                                                             {{{1
"
" Export IPC name of current instance as environment variable and use it to
" communicate with the instance later. It can be used in some shell script that
" gets run from inside vifm, for example, like this:
"
"   vifm --server-name "$VIFM_SERVER_NAME" --remote +"cd '$PWD'"
"
"   let $VIFM_SERVER_NAME = v:servername
