# File: ~/.tmux.conf
# Manual: <url:man:tmux.1>
# Cheatsheet: <url:https://gist.github.com/Bekbolatov/6840069e51382965fdad>
# See also: <url:~/.config/tmuxp/>
#
# - list-keys
#   bind-keys [-r]
#   -T: prefix (default) / root (no prefix) / custom (see: switch-client -T)
#   -r: repeat
#
# - show-options : show-window-options
#   set-option   : set-window-option
#
# - command-prompt
#   confirm-before
#   display-message

# {{{1 Options (global)
set-option -g prefix C-a        # set prefix to C-a
set-option -g prefix2 None      # alternative prefix
set-option -g default-terminal "tmux-256color"
set-option -g set-titles on
set-option -g set-titles-string 'tmux:#{session_group}:#S/#W [#T] #{session_alerts}'
set-option -g remain-on-exit off
set-option -s exit-empty off
set-option -g history-limit 10000
set-option -g aggressive-resize on # When on resize per-window (and not per session).
set-option -g renumber-windows on
set-option -g escape-time 0
set-option -g mouse off

# the visual-* options determine how to react to alerts.
# Values: on (message), off (bell), both (message + bell)
set-option -g visual-activity off
set-option -g visual-bell off
set-option -g visual-silence off
# the *-action options determine which alerts to react to in relation to
# current window. Values: [ any | none | current | other ]
set-option -g activity-action other
set-option -g bell-action any
set-option -g silence-action other

# Status lines. See also window options window-status-*
set-option -g status on                 # number of status lines [ off | on | 2 .. 5 ]
#set-option -g status-format[]
set-option -g status-interval 60        # interval at which to redraw status line formats
set-option -g status-justify  centre    # where to justify window list [ left | right | centre ]
#set-option -g status-keys              # ($EDITOR =~ *vi*) ? vi : emacs
set-option -g status-position bottom
set-option -g status-left '(#S)'
set-option -g status-left-length 30
set-option -g status-left-style ''
set-option -g status-right '#(printenv USER)@#H'
set-option -g status-right-length 40
set-option -g status-style bg=black,fg=default
set-option -g status-right-style ''

set-option -g display-panes-active-colour blue
set-option -g display-panes-colour brightred

set-option -g message-style bg=black,fg=brightred


# {{{1 Window options (global)
set-window-option -g xterm-keys on
set-window-option -g mode-keys vi  # (default mode-keys vi)
set-window-option -g mode-style fg=black,bg=yellow
set-window-option -g wrap-search off

set-window-option -g alternate-screen on

set-window-option -g allow-rename on     # whether or not a program can set window name via termcap escape sequence
set-window-option -g automatic-rename on # automatically set window name per format
set-window-option -g automatic-rename-format "#{?pane_in_mode,[tmux],#{pane_current_command}}#{?pane_dead,[dead],}"

# tmux can manage three kinds of alerts: bell, activity and silence.
# The monitor-* window options determine which alerts tmux monitors per window.
set-window-option -g monitor-activity off # on/off
set-window-option -g monitor-bell on      # on/off
set-window-option -g monitor-silence 0    # seconds, determines max silence interval. 0 disables

# Window on the status lines.
set-window-option -g window-status-activity-style fg=blue
set-window-option -g window-status-bell-style fg=blue
set-window-option -g window-status-current-format "#I:#W#{?window_flags,#{window_flags}, }"
set-window-option -g window-status-current-style fg=brightred
set-window-option -g window-status-format "#I:#W#{?window_flags,#{window_flags}, }"
set-window-option -g window-status-last-style fg=brightmagenta
set-window-option -g window-status-separator " "
set-window-option -g window-status-style default

set-window-option -g pane-border-style fg=black
set-window-option -g pane-active-border-style fg=brightgreen

set-window-option -g clock-mode-colour green


# {{{1 Keys: -T root
unbind-key -T root -a

bind-key -T root S-PPage copy-mode -u  # fast view previous page

# {{{1 Keys: -T prefix
unbind-key  -T prefix -a
bind-key    -T prefix C-a     send-prefix
bind-key    -T prefix ?       list-keys -T prefix \; list-keys -T copy-mode-vi
bind-key    -T prefix r       source-file ~/.tmux.conf
# {{{2 Modes
bind-key    -T prefix :       command-prompt
bind-key    -T prefix '~'     show-messages
bind-key    -T prefix t       clock-mode
bind-key    -T prefix [       copy-mode
bind-key    -T prefix PPage   copy-mode -u
bind-key    -T prefix w       run-shell "tmux choose-tree -Nwf\"##{==:##S,#S}\"" # choose in current session
bind-key    -T prefix C-w     choose-tree -GZw  # choose in all sessions
# {{{2 Sessions/clients
bind-key    -T prefix Y       switch-client -l  # last-client
bind-key    -T prefix (       switch-client -p
bind-key    -T prefix )       switch-client -n
bind-key    -T prefix D       choose-client -Z
bind-key    -T prefix d       detach-client
bind-key    -T prefix C-z     suspend-client
bind-key    -T prefix '$'     command-prompt -I "#S" "rename-session -- '%%'"
bind-key    -T prefix C-x     confirm-before -p "kill-session #S? (y/n)" kill-session
# {{{2 Panes
bind-key    -T prefix C-y     last-pane
bind-key -r -T prefix C-n     select-pane -t :.+ # next pane
bind-key -r -T prefix C-p     select-pane -t :.- # previous pane
bind-key    -T prefix z       resize-pane -Z     # toggle zoom
bind-key -r -T prefix h       select-pane -L
bind-key -r -T prefix j       select-pane -D
bind-key -r -T prefix k       select-pane -U
bind-key -r -T prefix l       select-pane -R
bind-key -r -T prefix C-h     resize-pane -L
bind-key -r -T prefix C-j     resize-pane -D
bind-key -r -T prefix C-k     resize-pane -U
bind-key -r -T prefix C-l     resize-pane -R
bind-key -r -T prefix H       resize-pane -L 5
bind-key -r -T prefix J       resize-pane -D 5
bind-key -r -T prefix K       resize-pane -U 5
bind-key -r -T prefix L       resize-pane -R 5
bind-key    -T prefix {       swap-pane -U
bind-key    -T prefix }       swap-pane -D
bind-key    -T prefix o       rotate-window  # rotate panes
bind-key    -T prefix O       rotate-window -D
bind-key    -T prefix Enter   join-pane -v
bind-key    -T prefix S-Enter join-pane -h
bind-key    -T prefix m       select-pane -m \; display-message "Marked pane #T #F"
bind-key    -T prefix M       select-pane -M \; display-message "Unmarked pane"
bind-key    -T prefix '"'     split-window
bind-key    -T prefix |       split-window -h
bind-key    -T prefix !       break-pane
bind-key    -T prefix x       confirm-before -p "kill-pane #P? (y/n)" kill-pane
# {{{2 Windows
bind-key    -T prefix a       last-window
bind-key    -T prefix y       last-window
bind-key    -T prefix A       next-window -a  # window with alert
bind-key    -T prefix "'"     command-prompt -p index "select-window -t ':%%'"  # by index
bind-key    -T prefix /       command-prompt "find-window -Z -- '%%'"  # by name
bind-key -r -T prefix n       select-window -t :+
bind-key -r -T prefix p       select-window -t :-
bind-key    -T prefix 0       select-window -t :=0
bind-key    -T prefix 1       select-window -t :=1
bind-key    -T prefix 2       select-window -t :=2
bind-key    -T prefix 3       select-window -t :=3
bind-key    -T prefix 4       select-window -t :=4
bind-key    -T prefix 5       select-window -t :=5
bind-key    -T prefix 6       select-window -t :=6
bind-key    -T prefix 7       select-window -t :=7
bind-key    -T prefix 8       select-window -t :=8
bind-key    -T prefix 9       select-window -t :=9
bind-key -r -T prefix N       swap-window -t :+
bind-key -r -T prefix P       swap-window -t :-
bind-key    -T prefix .       command-prompt "swap-window -t '%%'"
bind-key    -T prefix ,       command-prompt -I "#W" "rename-window -- '%%'"
bind-key    -T prefix c       new-window
bind-key    -T prefix X       confirm-before -p "kill-window #W? (y/n)" kill-window
# {{{2 Layouts
bind-key    -T prefix Space   next-layout
bind-key    -T prefix =       select-layout -E  # even all panes
# {{{2 Buffers
bind-key    -T prefix b       choose-buffer -Z
bind-key    -T prefix ]       paste-buffer
bind-key    -T prefix C-c     run-shell -b "tmux save-buffer - | xclip -i"

# {{{1 Keys: -T copy-mode-vi
unbind-key -T copy-mode-vi -a
# {{{2 Select
bind-key -T copy-mode-vi s      send-keys -X stop-selection
bind-key -T copy-mode-vi v      send-keys -X begin-selection
bind-key -T copy-mode-vi C-v    send-keys -X begin-selection \; send-keys -X rectangle-toggle
bind-key -T copy-mode-vi V      send-keys -X select-line
bind-key -T copy-mode-vi c      send-keys -X copy-pipe-and-cancel "xclip -i"
bind-key -T copy-mode-vi C      send-keys -X copy-pipe "xclip -i"
bind-key -T copy-mode-vi y      send-keys -X copy-selection-and-cancel
bind-key -T copy-mode-vi Y      send-keys -X copy-selection
bind-key -T copy-mode-vi a      send-keys -X append-selection-and-cancel
bind-key -T copy-mode-vi A      send-keys -X append-selection
bind-key -T copy-mode-vi q      if-shell -F "#{selection_present}" "send-keys -X clear-selection" "send-keys -X cancel"
bind-key -T copy-mode-vi Escape send-keys -X cancel
bind-key -T copy-mode-vi C-c    send-keys -X cancel
# {{{2 Move by character
bind-key -T copy-mode-vi h      send-keys -X cursor-left
bind-key -T copy-mode-vi j      send-keys -X cursor-down
bind-key -T copy-mode-vi k      send-keys -X cursor-up
bind-key -T copy-mode-vi l      send-keys -X cursor-right
bind-key -T copy-mode-vi Up     send-keys -X cursor-up
bind-key -T copy-mode-vi Down   send-keys -X cursor-down
bind-key -T copy-mode-vi Left   send-keys -X cursor-left
bind-key -T copy-mode-vi Right  send-keys -X cursor-right
# Jumps: f/F cursor over target, t/T cursor next to target
bind-key -T copy-mode-vi \;     send-keys -X jump-again
bind-key -T copy-mode-vi ,      send-keys -X jump-reverse
bind-key -T copy-mode-vi f      command-prompt -1 -p "(jump forward)" "send -X jump-forward \"%%%\""
bind-key -T copy-mode-vi F      command-prompt -1 -p "(jump backward)" "send -X jump-backward \"%%%\""
bind-key -T copy-mode-vi t      command-prompt -1 -p "(jump to forward)" "send -X jump-to-forward \"%%%\""
bind-key -T copy-mode-vi T      command-prompt -1 -p "(jump to backward)" "send -X jump-to-backward \"%%%\""
# {{{2 Move by word/space/paragraph
bind-key -T copy-mode-vi w      send-keys -X next-word
bind-key -T copy-mode-vi W      send-keys -X next-space
bind-key -T copy-mode-vi e      send-keys -X next-word-end
bind-key -T copy-mode-vi E      send-keys -X next-space-end
bind-key -T copy-mode-vi b      send-keys -X previous-word
bind-key -T copy-mode-vi B      send-keys -X previous-space
bind-key -T copy-mode-vi {      send-keys -X previous-paragraph
bind-key -T copy-mode-vi }      send-keys -X next-paragraph
# {{{2 Move by lines
bind-key -T copy-mode-vi :      command-prompt -p "(goto line)" "send -X goto-line \"%%%\""
bind-key -T copy-mode-vi ^      send-keys -X back-to-indentation
bind-key -T copy-mode-vi 0      send-keys -X start-of-line
bind-key -T copy-mode-vi '$'    send-keys -X end-of-line
bind-key -T copy-mode-vi H      send-keys -X top-line
bind-key -T copy-mode-vi L      send-keys -X bottom-line
bind-key -T copy-mode-vi M      send-keys -X middle-line
# {{{2 Move by page
bind-key -T copy-mode-vi g      send-keys -X history-top
bind-key -T copy-mode-vi G      send-keys -X history-bottom
bind-key -T copy-mode-vi C-u    send-keys -X halfpage-up
bind-key -T copy-mode-vi C-d    send-keys -X halfpage-down
# {{{2 Scroll
bind-key -T copy-mode-vi o      send-keys -X other-end  # other end of current selection
bind-key -T copy-mode-vi K      send-keys -X scroll-up
bind-key -T copy-mode-vi J      send-keys -X scroll-down
bind-key -T copy-mode-vi PPage  send-keys -X scroll-up
bind-key -T copy-mode-vi NPage  send-keys -X scroll-down
# {{{2 Search
bind-key -T copy-mode-vi /      command-prompt -p "(search down)" "send -X search-forward \"%%%\""
bind-key -T copy-mode-vi ?      command-prompt -p "(search up)" "send -X search-backward \"%%%\""
bind-key -T copy-mode-vi n      send-keys -X search-again
bind-key -T copy-mode-vi N      send-keys -X search-reverse
# {{{2 Repeat a character
bind-key -T copy-mode-vi 1      command-prompt -N -I 1 -p (repeat) "send -N \"%%%\""
bind-key -T copy-mode-vi 2      command-prompt -N -I 2 -p (repeat) "send -N \"%%%\""
bind-key -T copy-mode-vi 3      command-prompt -N -I 3 -p (repeat) "send -N \"%%%\""
bind-key -T copy-mode-vi 4      command-prompt -N -I 4 -p (repeat) "send -N \"%%%\""
bind-key -T copy-mode-vi 5      command-prompt -N -I 5 -p (repeat) "send -N \"%%%\""
bind-key -T copy-mode-vi 6      command-prompt -N -I 6 -p (repeat) "send -N \"%%%\""
bind-key -T copy-mode-vi 7      command-prompt -N -I 7 -p (repeat) "send -N \"%%%\""
bind-key -T copy-mode-vi 8      command-prompt -N -I 8 -p (repeat) "send -N \"%%%\""
bind-key -T copy-mode-vi 9      command-prompt -N -I 9 -p (repeat) "send -N \"%%%\""

# {{{1 Keys: copy-mode (emacs)
unbind-key -T copy-mode -a

bind -T copy-mode a list-keys
